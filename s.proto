package upax_go;

// upax_go/s.proto

// This protocol is used for server-server communications within the 
// cluster.  Servers are expected to set up communications using 
// xlattice_go helloAndReply sequence, and then switch to this protocol.
// Servers must send periodic keep-alives to keep the connection up.

message UpaxClusterMsg {
    enum Tag {
        // Valid tags for messages from peers.  In this package this
        // should be a dense sequence starting at zero.

        ItsMe       = 0;    // msgN, id, opt salt, sig
        KeepAlive   = 1;    // msgN
        Get         = 2;    // msgN plus hash
        IHave       = 3;    // msgN plus payload = list of hashes
        Put         = 4;    // LogEntry plus payload
        Bye         = 5;   

        // Valid tags for replies to peers.
        Ack         = 10;    // msgN, yourMsgN
        Data        = 11;    // msgN; LogEntry plus payload
        Error       = 12;    // mgnN; errCode, errDesc

    }
    optional Tag    Op          = 1;
    optional uint64 MsgN        = 2;    // Nth msg on this cnx, starting at 1
    optional bytes  ID          = 3;
    optional bytes  Salt        = 4;
    optional bytes  Sig         = 5;

    optional uint64 YourMsgN    = 6;
    optional bytes  YourID      = 7;
    optional uint64 ErrCode     = 8;
    optional string ErrDesc     = 9;
    optional bytes  Hash        = 10;
    optional bytes  Payload     = 11;

    // for LogEntry
    optional int64  Index       = 32;
    optional int64  Timestamp   = 33;
    optional bytes  ContentKey  = 34;
    optional bytes  Owner       = 35;
    optional string Src         = 36;
    optional string Path        = 37;
}

