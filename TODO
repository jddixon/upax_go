github.com/jddixon/upax_go/TODO

2013-11-17 (from 11-14, edited)
    * s_msg_handler: finish Get, handling LogEntry                      * DONE
        - IDMap must internally get read lock                           * DONE
    * s_msg_handler: finish Put, handling LogEntry,                     * DONE
        - including append to U/L                                       * DONE 
        - IDMap must internally get write lock                          * DONE

2013-11-16 (from 11-12, edited
    * server must load logEntries into memory at start of run           * DONE
    * append to disk log L immediately after writing into U             * DONE

2013-11-16
    * FIX nil pointer causes panic doTestCluster 22, cluster_test 136,
        client_ndoe 144, ...  This appears to be an obscure effect of
        xlReg being down.  Need better handling of this condition.
    * accesses to IDMap entries need to be synchronized, but this       * DONE 
        should be done there (in xlattice_go/node/id_map.go), not in    * DONE
        using code                                                      * DONE
    * also need an entryCount on IDMap, synchronized there              * DONE

2013-11-14
    * U/L opened 0600                                                   * DONE
    * dirty flag in associated data structure                           * DONE

2013-11-12
    * consider changing xlattice_go/u to
        - hide the usingSHA1 distinction (eg GetData1 and GetData3      * DONE
            hide behind GetData)                                        * DONE
        - use binary keys, []byte instead of hex string                 * DONE

2013-11-09
    * FIX: Get and Put only handle files that fit within the buffer;
        need code at both ends that will handle files of indefinite 
        size.

2013-11-07
    * verify that registering cluster member closes the connection
        to the registry when done
    * current target for cluster_test.go is that we start up the K1
        servers and
        - they send ItsMe, get back an Ack, then send Bye, get back
            an Ack, sleep say 100ms, and signal done
        - then they add 10x KeepAlive/Ack sequences at 20ms intervals
            with done after the Bye/Ack pair
        - then we add the K2 clients
    * starting server must open log file LFS/U/L 0600 at beginning of 
        run, close at end.

2013-11-05
    * need additional state for intra-cluster communications: call it   * DONE
        ID_VERIFIED                                                     * DONE
        - this requires another message signed by the cluster member
            which sent the Hello

2013-10-27
    * a booting server without an LFS must find and parse ./regCred.dat
        to continue
        - once such a server has created its LFS it writes regCred.dat
            into it

2013-10-26
    CLUSTER (was cluster/TODO)
    * expect cluster names to look like reversed fully qualified
        domain names such as org.xlattice.upax.ABCDEF

        - create K2 (3..7? but chosen separately) clients; each
            of which runs in a separate goroutine
            * learns cluster configuration from the registry
            * then pumps K3 items into a randomly chosen server
            * sends back to the test master a list of K3 content
                keys

        - when all K2 clients are done, test master verifies that
            all K2 * K3 items are in the cluster
        - after some reasonable period of time, all K2 * K3 items
            should be on all K servers (in the current 
            implementation)

    * in tests as in production first communications of a new
        cluster are with xlReg on port 44444, default 127.0.0.1
        - cluster name defaults to "upax"
        - size defaults to 5
        - epCount is 2 (cluster-cluster, client-cluster)
        - default LFS is /var/app/upax for production,
            ./tmp/SERVER_NAME for test, where SERVER_NAME is
            locally unique
        - expected xlReg version is 0.2.0 or better

    * upax_go/node looks to be useless

    CLIENT (was client/TODO)
    * given a cluster name or ID plus registry credentials, a client
        should first obtain from the registry configuration 
        information on the cluster, which will include the IP addresses
        (endPoints) and public keys of cluster members
    * for testing purposes, expect the registry to be on port 44444
    * in production applications, expect the registry to be on 55555

2013-08-09 was: upax_go/ftlog/TODO
    * LogEntry.String() and Parse() support simple conversion 
        between in-memory objects and string files; need a
        Protobuf spec
        - but then need to be sure of ability to recover from 
            file corruption
        - same spec can of course be used to pass log entries
            between servers
        
2013-08-08
    * doTestBodyLine needs better tests of paths
        - rnglib should generate random POSIX paths
        - and random email addresses
