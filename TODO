github.com/jddixon/upax_go/TODO

2016-11-15
    * fix: need to manually copy /var/app/xlReg/regCred.dat to 
        work dir and then edit to use 127.0.0.1:56789 to get tests
        to succeed

2016-06-02
    * test.all gets failures                                            * FIXED

2016-02-26
    * add appropriate text and link from README to upaxMirror.html
2016-01-20
    * upax{Client,Mirror,Server}.md at top level are not being used;    * DONE
        drop                                                            * DONE
        - make sure there are links to ghpDoc *.md from README.md       * DONE

2016-01-19
    * UpaxClient, defined in client.go, needs encrypter and decrypter
        fields, which will be used by clientDecrytUnpadDecode and
        clientEncrytPadEncode
        - added to the data structure but not initialized XXX ERROR XXX

    * countem is not counting upaxServer.go

    * after fixes to gocheck_test.go, possibly unrelated shower of
        errors in compilation

2016-01-11
    * code differs from github, presumbably because of 'new aes_cnx XPI 

2015-06-10
    * unresolved API problems in node/

2015-04-27
    * code needs cleaning up after changes to match new aes_cnx API
    
2015-04-24
    * modify to be conpatible with xlProtocol_go/aes_cnx changes        * DONE
    * all tests must succeed! (currently causes xlReg to panic)         * FIXED

2014-12-31
    * test go returns two instances of						            * OK
        handleHello closing cnx, error was crypto/rsa: decryption error	* OK
        - regCred.dat did not match current xlReg						* OK
    * version.go and CHANGES are out of sync on github, need to update  * DONE
2014-12-20
    * the versions of README.md and and ghpDoc/index.md on github       * DONE
        are more recent than the current versions and so the latter     * DONE
        should be brought into conformance with the github versions.    * DONE

2014-11-19
    * intro_seq.t IntroMsg should set attrs
2014-11-11
    * needs commit, NewAdminClient() renames NewAdminMember()           * DONE
2014-10-23
    * if xlReg is not running, server invocation fails in SessionSetup,
        getting a connection refused, which causes a panic; need more
        robust code
    * likewise if xlReg has been rebuilt; this requires that any 
        running xlReg be killed, a new instance started, and then 
        ./updateRegCred be run 

2014-10-09 (edited from 2013-12-24)
    * integrate in xlProtocol chunks

2014-10-06
    * use HAMT to store log in memory
    * introduce BaseLogEntry without key (content hash)
        - LogEntry is BaseLogEntry with key field
        - IndexedLogEntry is BaseLogEntry plus Index uint
        - LogEntrys get appended to on-disk ftlog
        - HAMT is keyed on content hash (key) and points to
            IndexedLogEntry

2014-10-03
    * explore use of Memory in the server

2013-12-09
    * add version negotiation to client/server protocol, c.proto
        - VERSION in const.go
    * ExpectedAck error should be replaced by a custom message that
        says what it expected and what it got.
    * Consider adding rng created in Intro/ItsMeAndAck to upc struct
    * Think and fix: GetAndData will only handle data that will fit 
        in memory

2013-12-04
    * pair_test tests a single MockUpaxClient against a couple of
        servers in a 2-cluster
    * MockUpaxClient.postData() sends to server 0
    * MockUpaxClient.checkPrimaryServer() checks server 0
    * MockUpaxClient.checkOtherServers() checks server 1
        
2013-11-29
    * aes_cnx.t 
        - ideally the pkg variable should be defined in parent context
2013-11-19
    * ClusterOutHandler has IHaveMgr running in a separate goroutine
    * ClusterOutHandler has KeepAliveMgr running in separate goroutine
2013-11-16
    * FIX nil pointer causes panic doTestCluster 22, cluster_test 136,
        client_node 144, ...  This appears to be an obscure effect of
        xlReg being down.  Need better handling of this condition.
2013-11-09
    * FIX: Get and Put only handle files that fit within the buffer;
        need code at both ends that will handle files of indefinite 
        size.
2013-11-07
    * verify that registering cluster member closes the connection
        to the registry when done
    * current target for cluster_test.go is that we start up the K1
        servers and
        - they send ItsMe, get back an Ack, then send Bye, get back
            an Ack, sleep say 100ms, and signal done
        - then they add 10x KeepAlive/Ack sequences at 20ms intervals
            with done after the Bye/Ack pair
        - then we add the K2 clients
    * starting server must open log file LFS/U/L 0600 at beginning of 
        run, close at end.
2013-11-05
    * need additional state for intra-cluster communications: call it   * DONE
        ID_VERIFIED                                                     * DONE
        - this requires another message signed by the cluster member
            which sent the Hello
2013-10-27
    * a booting server without an LFS must find and parse ./regCred.dat
        to continue
        - once such a server has created its LFS it writes regCred.dat
            into it
2013-10-26
    CLUSTER (was cluster/TODO)
    * expect cluster names to look like reversed fully qualified
        domain names such as org.xlattice.upax.ABCDEF
        - create K2 (3..7? but chosen separately) clients; each
            of which runs in a separate goroutine
            * learns cluster configuration from the registry
            * then pumps K3 items into a randomly chosen server
            * sends back to the test master a list of K3 content
                keys
        - when all K2 clients are done, test master verifies that
            all K2 * K3 items are in the cluster
        - after some reasonable period of time, all K2 * K3 items
            should be on all K servers (in the current 
            implementation)
    * in tests as in production first communications of a new
        cluster are with xlReg on port 44444, default 127.0.0.1
        - cluster name defaults to "upax"
        - size defaults to 5
        - epCount is 2 (cluster-cluster, client-cluster)
        - default LFS is /var/app/upax for production,
            ./tmp/SERVER_NAME for test, where SERVER_NAME is
            locally unique
        - expected xlReg version is 0.2.0 or better
    * upax_go/node looks to be useless

    CLIENT (was client/TODO)
    * given a cluster name or ID plus registry credentials, a client
        should first obtain from the registry configuration 
        information on the cluster, which will include the IP addresses
        (endPoints) and public keys of cluster members
    * for testing purposes, expect the registry to be on port 44444
    * in production applications, expect the registry to be on 55555
2013-08-09 was: upax_go/ftlog/TODO
    * LogEntry.String() and Parse() support simple conversion 
        between in-memory objects and string files; need a
        Protobuf spec
        - but then need to be sure of ability to recover from 
            file corruption
        - same spec can of course be used to pass log entries
            between servers
2013-08-08
    * doTestBodyLine needs better tests of paths
        - rnglib should generate random POSIX paths
        - and random email addresses
