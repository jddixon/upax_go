// Code generated by protoc-gen-go.
// source: server.proto
// DO NOT EDIT!

package upax_go

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type UpaxMsg_Cmd int32

const (
	UpaxMsg_KeepAlive UpaxMsg_Cmd = 3
	UpaxMsg_Ack       UpaxMsg_Cmd = 4
	UpaxMsg_Error     UpaxMsg_Cmd = 5
	UpaxMsg_Get       UpaxMsg_Cmd = 6
	UpaxMsg_Put       UpaxMsg_Cmd = 7
	UpaxMsg_IHave     UpaxMsg_Cmd = 8
	UpaxMsg_LogEntry  UpaxMsg_Cmd = 9
)

var UpaxMsg_Cmd_name = map[int32]string{
	3: "KeepAlive",
	4: "Ack",
	5: "Error",
	6: "Get",
	7: "Put",
	8: "IHave",
	9: "LogEntry",
}
var UpaxMsg_Cmd_value = map[string]int32{
	"KeepAlive": 3,
	"Ack":       4,
	"Error":     5,
	"Get":       6,
	"Put":       7,
	"IHave":     8,
	"LogEntry":  9,
}

func (x UpaxMsg_Cmd) Enum() *UpaxMsg_Cmd {
	p := new(UpaxMsg_Cmd)
	*p = x
	return p
}
func (x UpaxMsg_Cmd) String() string {
	return proto.EnumName(UpaxMsg_Cmd_name, int32(x))
}
func (x UpaxMsg_Cmd) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *UpaxMsg_Cmd) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpaxMsg_Cmd_value, data, "UpaxMsg_Cmd")
	if err != nil {
		return err
	}
	*x = UpaxMsg_Cmd(value)
	return nil
}

type UpaxMsg struct {
	Op               *UpaxMsg_Cmd `protobuf:"varint,1,opt,enum=upax_go.UpaxMsg_Cmd" json:"Op,omitempty"`
	MsgN             *uint64      `protobuf:"varint,2,opt" json:"MsgN,omitempty"`
	ID               []byte       `protobuf:"bytes,3,opt" json:"ID,omitempty"`
	Salt             []byte       `protobuf:"bytes,4,opt" json:"Salt,omitempty"`
	Sig              []byte       `protobuf:"bytes,5,opt" json:"Sig,omitempty"`
	YourSeqN         *uint64      `protobuf:"varint,6,opt" json:"YourSeqN,omitempty"`
	YourID           []byte       `protobuf:"bytes,7,opt" json:"YourID,omitempty"`
	ErrCode          *uint64      `protobuf:"varint,8,opt" json:"ErrCode,omitempty"`
	ErrDesc          *string      `protobuf:"bytes,9,opt" json:"ErrDesc,omitempty"`
	Hash             []byte       `protobuf:"bytes,10,opt" json:"Hash,omitempty"`
	Payload          []byte       `protobuf:"bytes,11,opt" json:"Payload,omitempty"`
	CommsKey         []byte       `protobuf:"bytes,12,opt" json:"CommsKey,omitempty"`
	SigKey           []byte       `protobuf:"bytes,13,opt" json:"SigKey,omitempty"`
	MyEnd            *string      `protobuf:"bytes,14,opt" json:"MyEnd,omitempty"`
	Index            *int64       `protobuf:"varint,32,opt" json:"Index,omitempty"`
	Timestamp        *int64       `protobuf:"varint,33,opt" json:"Timestamp,omitempty"`
	ContentKey       []byte       `protobuf:"bytes,34,opt" json:"ContentKey,omitempty"`
	Owner            []byte       `protobuf:"bytes,35,opt" json:"Owner,omitempty"`
	Src              *string      `protobuf:"bytes,36,opt" json:"Src,omitempty"`
	Path             *string      `protobuf:"bytes,37,opt" json:"Path,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *UpaxMsg) Reset()         { *m = UpaxMsg{} }
func (m *UpaxMsg) String() string { return proto.CompactTextString(m) }
func (*UpaxMsg) ProtoMessage()    {}

func (m *UpaxMsg) GetOp() UpaxMsg_Cmd {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return 0
}

func (m *UpaxMsg) GetMsgN() uint64 {
	if m != nil && m.MsgN != nil {
		return *m.MsgN
	}
	return 0
}

func (m *UpaxMsg) GetID() []byte {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *UpaxMsg) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *UpaxMsg) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *UpaxMsg) GetYourSeqN() uint64 {
	if m != nil && m.YourSeqN != nil {
		return *m.YourSeqN
	}
	return 0
}

func (m *UpaxMsg) GetYourID() []byte {
	if m != nil {
		return m.YourID
	}
	return nil
}

func (m *UpaxMsg) GetErrCode() uint64 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *UpaxMsg) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

func (m *UpaxMsg) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *UpaxMsg) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *UpaxMsg) GetCommsKey() []byte {
	if m != nil {
		return m.CommsKey
	}
	return nil
}

func (m *UpaxMsg) GetSigKey() []byte {
	if m != nil {
		return m.SigKey
	}
	return nil
}

func (m *UpaxMsg) GetMyEnd() string {
	if m != nil && m.MyEnd != nil {
		return *m.MyEnd
	}
	return ""
}

func (m *UpaxMsg) GetIndex() int64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *UpaxMsg) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *UpaxMsg) GetContentKey() []byte {
	if m != nil {
		return m.ContentKey
	}
	return nil
}

func (m *UpaxMsg) GetOwner() []byte {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *UpaxMsg) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *UpaxMsg) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func init() {
	proto.RegisterEnum("upax_go.UpaxMsg_Cmd", UpaxMsg_Cmd_name, UpaxMsg_Cmd_value)
}
